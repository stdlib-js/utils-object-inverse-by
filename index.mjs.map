{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils-keys';\nimport isArray from '@stdlib/assert-is-array';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport isObjectLike from '@stdlib/assert-is-object-like';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport isFunction from '@stdlib/assert-is-function';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys, according to a transform function.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must an an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* function transform( key, value ) {\n*     return key + value;\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop'\n* };\n* var out = invertBy( obj, transform );\n* // returns { 'abeep': 'a', 'bboop': 'b' }\n*\n* @example\n* function transform( key, value ) {\n*     return value;\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'beep'\n* };\n* var out = invertBy( obj, transform );\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* function transform( key, value ) {\n*     return value;\n* }\n*\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var opts = {\n*     'duplicates': false\n* };\n* var out = invertBy( obj, opts, transform );\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invertBy( obj, opts, transform ) {\n\tvar allowDupes;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar cb;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( '1WJES', obj ) );\n\t}\n\tallowDupes = true;\n\tif ( arguments.length === 2 ) {\n\t\tcb = opts;\n\t} else {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '1WJ2V', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( '1WJ2o', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t\tcb = transform;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( '1WJ3q', cb ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = cb( key, obj[ key ], obj );\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = cb( key, obj[ key ], obj );\n\t\t\tout[ val ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default invertBy;\n"],"names":["invertBy","obj","opts","transform","allowDupes","keys","len","key","val","out","cb","v","i","isObjectLike","TypeError","format","arguments","length","isObject","hasOwnProp","duplicates","isBoolean","isFunction","objectKeys","isArray","push"],"mappings":";;2vBAqFA,SAASA,EAAUC,EAAKC,EAAMC,GAC7B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAcZ,GACnB,MAAM,IAAIa,UAAWC,EAAQ,QAASd,IAGvC,GADAG,GAAa,EACa,IAArBY,UAAUC,OACdP,EAAKR,MACC,CACN,IAAMgB,EAAUhB,GACf,MAAM,IAAIY,UAAWC,EAAQ,QAASb,IAEvC,GAAKiB,EAAYjB,EAAM,gBACtBE,EAAaF,EAAKkB,YACZC,EAAWjB,IAChB,MAAM,IAAIU,UAAWC,EAAQ,QAAS,aAAcX,IAGtDM,EAAKP,CACL,CACD,IAAMmB,EAAYZ,GACjB,MAAM,IAAII,UAAWC,EAAQ,QAASL,IAKvC,GAFAJ,GADAD,EAAOkB,EAAYtB,IACRgB,OACXR,EAAM,CAAA,EACDL,EACJ,IAAMQ,EAAI,EAAGA,EAAIN,EAAKM,IAErBJ,EAAME,EADNH,EAAMF,EAAMO,GACGX,EAAKM,GAAON,GACrBkB,EAAYV,EAAKD,IAIvBG,EAAIF,EAAKD,GACJgB,EAASb,GACbF,EAAKD,GAAMiB,KAAMlB,GAEjBE,EAAKD,GAAQ,CAAEG,EAAGJ,IAPlBE,EAAKD,GAAQD,OAWf,IAAMK,EAAI,EAAGA,EAAIN,EAAKM,IAGrBH,EADAD,EAAME,EADNH,EAAMF,EAAMO,GACGX,EAAKM,GAAON,IACdM,EAGf,OAAOE,CACR"}